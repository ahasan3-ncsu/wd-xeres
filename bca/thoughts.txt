Energy discretization

- let's just work with 64 nm radius bubbles - one at a time

4 location for off-centered value
headon, Rb + delta, 2 in the middle of the former two
^ maybe choosing different relative positions will help
find a pattern
pick the energy that corresponds to the re-solution peak
for the peak, maybe have 3 middle positions
for other energies, maybe have 1 or 2 middle positions

how to deal with convergence of one configuration?
same with ion convergence
run 1000 at a time
check the difference in all 3 values:
#xe interactions, #outside, #resolved
actually, just one is enough. work with #resolved.

TOML

filename (positional argument)
sphere - R, rho
Y - N, E, pos
I - N, E, pos

DIRECTORY structure

si_pref
input replicator
runner and agg can be local; meaning they can be in headon/
--V--
disseminator (creates input files, moves them, runs sims, runs convergence tester)

need to create an intermediate file with the following: (agg.py)
- num_ions
- num_xe_recoils
- num_xe_outside
- num_xe_resolved

create symlinks to scripts/ as necessary

headon (equil_pres)
- 64 nm (radius)
  - Y_1MeV (ion type and energy)
	- run_1
	- run_2
	- ...
	- aggregate data
  - I_5MeV
	- run_1
	- run_2
	- ...
